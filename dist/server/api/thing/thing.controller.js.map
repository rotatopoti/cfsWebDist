{"version":3,"sources":["api/thing/thing.controller.js"],"names":["index","show","create","upsert","patch","destroy","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","req","find","exec","catch","findById","params","id","body","_id","findOneAndUpdate","new","setDefaultsOnInsert","runValidators"],"mappings":"AAAA;;;;;;;;;;AAUA;;;;;;;;;;;;;;QAsDgBA,K,GAAAA,K;QAOAC,I,GAAAA,I;QAQAC,M,GAAAA,M;QAOAC,M,GAAAA,M;QAWAC,K,GAAAA,K;QAYAC,O,GAAAA,O;;AAjGhB;;AACA;;;;;;AAEA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgCC,UAAhC,EAA4C;AAC1CA,eAAaA,cAAc,GAA3B;AACA,SAAO,UAASC,MAAT,EAAiB;AACtB,QAAGA,MAAH,EAAW;AACT,aAAOF,IAAIG,MAAJ,CAAWF,UAAX,EAAuBG,IAAvB,CAA4BF,MAA5B,CAAP;AACD;AACD,WAAO,IAAP;AACD,GALD;AAMD;;AAED,SAASG,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,SAAO,UAASJ,MAAT,EAAiB;AACtB,QAAI;AACF,qCAAWA,MAAX,EAAmBI,OAAnB,EAA4B,YAAa,IAAzC;AACD,KAFD,CAEE,OAAMC,GAAN,EAAW;AACX,aAAO,kBAAQC,MAAR,CAAeD,GAAf,CAAP;AACD;;AAED,WAAOL,OAAOO,IAAP,EAAP;AACD,GARD;AASD;;AAED,SAASC,YAAT,CAAsBV,GAAtB,EAA2B;AACzB,SAAO,UAASE,MAAT,EAAiB;AACtB,QAAGA,MAAH,EAAW;AACT,aAAOA,OAAOS,MAAP,GACJC,IADI,CACC;AAAA,eAAMZ,IAAIG,MAAJ,CAAW,GAAX,EAAgBU,GAAhB,EAAN;AAAA,OADD,CAAP;AAED;AACF,GALD;AAMD;;AAED,SAASC,oBAAT,CAA8Bd,GAA9B,EAAmC;AACjC,SAAO,UAASE,MAAT,EAAiB;AACtB,QAAG,CAACA,MAAJ,EAAY;AACVF,UAAIG,MAAJ,CAAW,GAAX,EAAgBU,GAAhB;AACA,aAAO,IAAP;AACD;AACD,WAAOX,MAAP;AACD,GAND;AAOD;;AAED,SAASa,WAAT,CAAqBf,GAArB,EAA0BC,UAA1B,EAAsC;AACpCA,eAAaA,cAAc,GAA3B;AACA,SAAO,UAASM,GAAT,EAAc;AACnBP,QAAIG,MAAJ,CAAWF,UAAX,EAAuBe,IAAvB,CAA4BT,GAA5B;AACD,GAFD;AAGD;;AAED;AACO,SAASd,KAAT,CAAewB,GAAf,EAAoBjB,GAApB,EAAyB;AAC9B,SAAO,gBAAMkB,IAAN,GAAaC,IAAb,GACJP,IADI,CACCb,kBAAkBC,GAAlB,CADD,EAEJoB,KAFI,CAEEL,YAAYf,GAAZ,CAFF,CAAP;AAGD;;AAED;AACO,SAASN,IAAT,CAAcuB,GAAd,EAAmBjB,GAAnB,EAAwB;AAC7B,SAAO,gBAAMqB,QAAN,CAAeJ,IAAIK,MAAJ,CAAWC,EAA1B,EAA8BJ,IAA9B,GACJP,IADI,CACCE,qBAAqBd,GAArB,CADD,EAEJY,IAFI,CAECb,kBAAkBC,GAAlB,CAFD,EAGJoB,KAHI,CAGEL,YAAYf,GAAZ,CAHF,CAAP;AAID;;AAED;AACO,SAASL,MAAT,CAAgBsB,GAAhB,EAAqBjB,GAArB,EAA0B;AAC/B,SAAO,gBAAML,MAAN,CAAasB,IAAIO,IAAjB,EACJZ,IADI,CACCb,kBAAkBC,GAAlB,EAAuB,GAAvB,CADD,EAEJoB,KAFI,CAEEL,YAAYf,GAAZ,CAFF,CAAP;AAGD;;AAED;AACO,SAASJ,MAAT,CAAgBqB,GAAhB,EAAqBjB,GAArB,EAA0B;AAC/B,MAAGiB,IAAIO,IAAJ,CAASC,GAAZ,EAAiB;AACf,kCAAuBR,IAAIO,IAA3B,EAAiC,KAAjC;AACD;AACD,SAAO,gBAAME,gBAAN,CAAuB,EAACD,KAAKR,IAAIK,MAAJ,CAAWC,EAAjB,EAAvB,EAA6CN,IAAIO,IAAjD,EAAuD,EAACG,KAAK,IAAN,EAAY/B,QAAQ,IAApB,EAA0BgC,qBAAqB,IAA/C,EAAqDC,eAAe,IAApE,EAAvD,EAAkIV,IAAlI,GAEJP,IAFI,CAECb,kBAAkBC,GAAlB,CAFD,EAGJoB,KAHI,CAGEL,YAAYf,GAAZ,CAHF,CAAP;AAID;;AAED;AACO,SAASH,KAAT,CAAeoB,GAAf,EAAoBjB,GAApB,EAAyB;AAC9B,MAAGiB,IAAIO,IAAJ,CAASC,GAAZ,EAAiB;AACf,kCAAuBR,IAAIO,IAA3B,EAAiC,KAAjC;AACD;AACD,SAAO,gBAAMH,QAAN,CAAeJ,IAAIK,MAAJ,CAAWC,EAA1B,EAA8BJ,IAA9B,GACJP,IADI,CACCE,qBAAqBd,GAArB,CADD,EAEJY,IAFI,CAECP,aAAaY,IAAIO,IAAjB,CAFD,EAGJZ,IAHI,CAGCb,kBAAkBC,GAAlB,CAHD,EAIJoB,KAJI,CAIEL,YAAYf,GAAZ,CAJF,CAAP;AAKD;;AAED;AACO,SAASF,OAAT,CAAiBmB,GAAjB,EAAsBjB,GAAtB,EAA2B;AAChC,SAAO,gBAAMqB,QAAN,CAAeJ,IAAIK,MAAJ,CAAWC,EAA1B,EAA8BJ,IAA9B,GACJP,IADI,CACCE,qBAAqBd,GAArB,CADD,EAEJY,IAFI,CAECF,aAAaV,GAAb,CAFD,EAGJoB,KAHI,CAGEL,YAAYf,GAAZ,CAHF,CAAP;AAID","file":"thing.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/things              ->  index\n * POST    /api/things              ->  create\n * GET     /api/things/:id          ->  show\n * PUT     /api/things/:id          ->  upsert\n * PATCH   /api/things/:id          ->  patch\n * DELETE  /api/things/:id          ->  destroy\n */\n\n'use strict';\n\nimport { applyPatch } from 'fast-json-patch';\nimport Thing from './thing.model';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      applyPatch(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(() => res.status(204).end());\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Things\nexport function index(req, res) {\n  return Thing.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Thing from the DB\nexport function show(req, res) {\n  return Thing.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Thing in the DB\nexport function create(req, res) {\n  return Thing.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given Thing in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    Reflect.deleteProperty(req.body, '_id');\n  }\n  return Thing.findOneAndUpdate({_id: req.params.id}, req.body, {new: true, upsert: true, setDefaultsOnInsert: true, runValidators: true}).exec()\n\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing Thing in the DB\nexport function patch(req, res) {\n  if(req.body._id) {\n    Reflect.deleteProperty(req.body, '_id');\n  }\n  return Thing.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Thing from the DB\nexport function destroy(req, res) {\n  return Thing.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}